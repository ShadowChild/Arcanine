plugins {
    id 'java'
    id 'application'
}

//java {
//
//    sourceCompatability = JavaVersion.VERSION_14;
//    targetCompatability = JavaVersion.VERSION_14;
//}

configurations.all {

    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

project.ext.jda = "4.1.1_165"
project.ext.jdautil = "3.0.4"
project.ext.l4j = "2.13.3"

group 'me.shadowchild.arcanine'
mainClassName = 'me.shadowchild.arcanine.Arcanine'
//rootProject.name = 'Arcanine'
version '1.0-SNAPSHOT'

repositories {

    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.12'

    implementation "org.jsoup:jsoup:1.13.1"
    implementation "com.konghq:unirest-java:3.7.04"

    implementation "net.dv8tion:JDA:$jda"
    implementation "com.jagrosh:jda-utilities:$jdautil"

    implementation ('com.github.ShadowChild:Cybernize2:master-SNAPSHOT') { changing = true }

    // required for async log4j
    implementation "com.lmax:disruptor:3.4.2"

    implementation "org.apache.logging.log4j:log4j-api:$l4j"
    implementation "org.apache.logging.log4j:log4j-core:$l4j"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$l4j"
}

ext.sharedManifest = manifest {

    attributes 'Main-Class' : 'me.shadowchild.arcanine.Arcanine'
}

jar {

    manifest = project.manifest {
        from sharedManifest
    }
}

task uberJar(type: Jar) {

    manifest = project.manifest {
        from sharedManifest
    }

    dependsOn build

    archiveClassifier = 'fat'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar')}.collect { zipTree(it) }
    }
}
